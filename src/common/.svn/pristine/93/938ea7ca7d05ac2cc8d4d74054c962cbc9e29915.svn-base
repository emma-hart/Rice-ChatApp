package common;

import java.io.Serializable;
import java.util.List;
import java.util.UUID;

import provided.datapacket.*;

/**
 * IChatroom keeps track of the IMember stubs of the members in the chatroom
 * and defines how communication with those members can occur. 
 *
 * Each instance of IChatroom needs a unique id.
 * 
 * IMember stubs are added to the chatroom via a "Join" message (a known message type). Similarly,
 * IMember stubs can leave a chatroom using a "Leave" message (another known message type). So,
 * we don't need add() or leave() methods in this interface.
 */
public interface IChatRoom extends Serializable {
	/**
	 * Accessor method for the unique id of the chatroom.
	 * 
	 * Use the UUID to compare chatrooms.
	 * 
	 * @return The chatroom UID
	 */
	public UUID getUUID();
	
	/**
	 * Delegates to the transferData() method on each IMember stub to blast data out
	 * to everyone in the chatroom.
	 * 
	 * @param dp The datapacket to receive
	 */
	public void sendMsgToAll(DataPacket<? extends IDataPacketData, IMember> dp);
	

	/**
	 * Accessor method for the IMember stubs that are known to be a part of the chatroom.
	 *  
	 *  @return the chatroom's member list
	 */
	public List<IMember> getMembers();

	
	/**
	 * Accessor method for the name of the chatroom
	 * 
	 * @return the chatroom's name
	 */
	public String getName();
}